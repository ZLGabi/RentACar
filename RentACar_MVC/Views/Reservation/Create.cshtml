@model RentACar.ServicesInfrastructure.DTO.ReservationCreationDTO

<h1 class="title text-center">Reservation</h1>
<hr />
<div class="container">
    @{Html.RenderAction("ReservedCar", "Reservation", new { carId = Context.Request.QueryString["CarId"] });}

    <div class="mt-5 w-100" id="reservationForm">
        @using (Html.BeginForm("Create", "Reservation", FormMethod.Post))
        {
            @Html.ValidationSummary("", new { @class = "text-danger" })
            @Html.HiddenFor(c => c.CarId);
            <div class="d-flex flex-row justify-content-around align-items-center">
                <div>
                    <div class="input-daterange">
                        @Html.LabelFor(d => d.BeginDate)
                        @Html.EditorFor(d => d.BeginDate)
                        @Html.ValidationMessageFor(d => d.BeginDate)
                        @Html.LabelFor(d => d.EndDate, new { @class = "ml-4" })
                        @Html.EditorFor(d => d.EndDate)
                        @Html.ValidationMessageFor(d => d.EndDate)
                    </div>
                </div>
                <div>
                    <h6>Period: <input id="numberOfDays" type="text" disabled class="h6 text-uppercase border-0 bg-light text-info" style="letter-spacing: 3px"></h6>
                    <h6>Discount: <input id="discount" type="text" disabled class="h6 text-uppercase border-0 bg-light text-info" style="letter-spacing: 3px"></h6>
                    <h6>Total price: <input id="finalPrice" type="text" disabled class="h6 text-uppercase border-0 bg-light text-info" style="letter-spacing: 3px"></h6>
                </div>
                <input type="submit" class="btn btn-primary" value="Submit" />
            </div>
        }
    </div>
    <div class="mt-5">
        @{Html.RenderAction("Periods", "Reservation");}
    </div>
</div>


<script type="text/javascript">
    jQuery(document).ready(function ($) {
        $(function () {
            function currentDay() {
                var today = new Date();
                var dd = today.getDate();
                var mm = today.getMonth() + 1;
                var yyyy = today.getFullYear();

                if (dd < 10) {
                    dd = '0' + dd;
                }

                if (mm < 10) {
                    mm = '0' + mm;
                }
                var result = (dd + '/' + mm + '/' + yyyy)
                $('#@Html.IdFor(d => d.BeginDate)').val(result);
                $('#@Html.IdFor(d => d.EndDate)').val(result);
                return result;
            }

            function numberOfDays() {
            var string1 = $('#@Html.IdFor(d => d.BeginDate)').val();
            var string2 = $('#@Html.IdFor(d => d.EndDate)').val();
            if (string1 !== "" && string2 !== "") {
                var dateStart = new Date(string1.replace(/(\d{2})\/(\d{2})\/(\d{4})/, "$2/$1/$3"));
                var dateEnd = new Date(string2.replace(/(\d{2})\/(\d{2})\/(\d{4})/, "$2/$1/$3"));
                var days = parseInt((dateEnd - dateStart) / (24 * 3600 * 1000)) + 1;
                if (days > 0) {
                    if (days === 1) {
                            $('#numberOfDays').val(days + ' day');
                    }
                    else {
                            $('#numberOfDays').val(days + ' days');
                    }
                }
                return days;
            }
        }

        function getDiscount(days) {
            var numberOfDays = $('.periodDay').map(function (index, element) {
                var elem = $(element);
                return elem.data("day");
            }).get();
            var discounts = $('.periodDiscount').map(function (index, element) {
                var elem = $(element);
                return elem.data("discount");
            }).get();
            var offers = {};
            for (var i = 0; i < numberOfDays.length; i++) {
                offers[numberOfDays[i]]= discounts[i];
            }
            var viableOffers = [];

            for (var i = 0; i < numberOfDays.length; i++) {
                if (days >= numberOfDays[i])
                    viableOffers.push(numberOfDays[i]);
            }
            var result;
            if (viableOffers.length > 0) {
                if (viableOffers.length == 1) {
                    result = offers[viableOffers[0]];
                }
                else {
                    var resultDay = Math.max.apply(Math, viableOffers);
                    result = offers[resultDay];
                }

            }
            else {
                result = 0;
            }
                $('#discount').val(result + '%');
            return result;
        }

            function calculatePrice(days) {
                var price = $('#carPrice').text() * days;
            var discount = getDiscount(days);
                $('#finalPrice').val((price - discount)+'€');
        }

            $('#reservationForm .input-daterange').datepicker({
                format: "dd/mm/yyyy",
                todayHighlight: true,
                startDate: currentDay(),
                onSelect: calculatePrice(numberOfDays())
            }).on("changeDate", function (e) {
            calculatePrice(numberOfDays());
                });
        });
    });
</script>


@section Styles {
    <link href="@Url.Content("~/Styles/Periods.css")" rel="stylesheet" type="text/css" />
}